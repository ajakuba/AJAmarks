-------------------------------------------------------------------------------
Test set: com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest
-------------------------------------------------------------------------------
Tests run: 14, Failures: 5, Errors: 1, Skipped: 0, Time elapsed: 18.752 sec <<< FAILURE! - in com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest
isStudentAverageHigherThenInAchoolTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 0.513 sec  <<< FAILURE!
java.lang.AssertionError: null
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.isStudentAverageHigherThenInAchoolTest(StatisticServiceIntegrationTest.java:237)

countAverageMarkForSchoolTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 0.966 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is <6.48>
     but: was <2.125>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.countAverageMarkForSchoolTest(StatisticServiceIntegrationTest.java:219)

getStudentsAboveStudentAverageTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 1.301 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is <[Student{idStudent=57, userName='aja', firstName='Jakub', lastName='Angel', classroom=Classroom{idClassroom=69, classroomNumber=1, classroomName='Pierwsza'}, studentMarks=[Mark{idMark=58, markValue=1, markName='ndst'}, Mark{idMark=59, markValue=2, markName='mrn'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=61, markValue=4, markName='db'}, Mark{idMark=62, markValue=5, markName='bdb'}, Mark{idMark=63, markValue=6, markName='cel'}]}, Student{idStudent=66, userName='ibi', firstName='Izabela', lastName='Break', classroom=Classroom{idClassroom=70, classroomNumber=2, classroomName='Druga'}, studentMarks=[Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}]}, Student{idStudent=101, userName='DefaultuserName', firstName='DefaultFirst', lastName='DefaultLast', classroom=Classroom{idClassroom=101, classroomNumber=111, classroomName='Default'}, studentMarks=[Mark{idMark=101, markValue=111, markName='Default'}]}]>
     but: was <[Student{idStudent=57, userName='aja', firstName='Jakub', lastName='Angel', classroom=Classroom{idClassroom=69, classroomNumber=1, classroomName='Pierwsza'}, studentMarks=[Mark{idMark=58, markValue=1, markName='ndst'}, Mark{idMark=59, markValue=2, markName='mrn'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=61, markValue=4, markName='db'}, Mark{idMark=62, markValue=5, markName='bdb'}, Mark{idMark=63, markValue=6, markName='cel'}]}, Student{idStudent=66, userName='ibi', firstName='Izabela', lastName='Break', classroom=Classroom{idClassroom=70, classroomNumber=2, classroomName='Druga'}, studentMarks=[Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}, Mark{idMark=60, markValue=3, markName='dst'}]}]>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.getStudentsAboveStudentAverageTest(StatisticServiceIntegrationTest.java:282)

countHowManyStudentsAboveStudentAverageTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 0.544 sec  <<< ERROR!
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [PRIMARY]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1039)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4098)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4030)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2134)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2434)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2352)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2337)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2934)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3434)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:582)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:456)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:337)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:50)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1361)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1443)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1402)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1374)
	at org.hibernate.Query.getResultList(Query.java:417)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:55)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:327)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:503)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:488)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:460)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy58.findAll(Unknown Source)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceImpl.countHowManyStudentsAboveStudentAverage(StatisticServiceImpl.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy62.countHowManyStudentsAboveStudentAverage(Unknown Source)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.countHowManyStudentsAboveStudentAverageTest(StatisticServiceIntegrationTest.java:256)

countHowManyStudentsAboveSchoolAverageTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 0.565 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is <1>
     but: was <2>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.countHowManyStudentsAboveSchoolAverageTest(StatisticServiceIntegrationTest.java:247)

getStudentsAboveSchoolAverageTest(com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest)  Time elapsed: 0.495 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is <[Student{idStudent=101, userName='DefaultuserName', firstName='DefaultFirst', lastName='DefaultLast', classroom=Classroom{idClassroom=101, classroomNumber=111, classroomName='Default'}, studentMarks=[Mark{idMark=101, markValue=111, markName='Default'}]}]>
     but: was <[Student{idStudent=183, userName='aja', firstName='Jakub', lastName='Angel', classroom=Classroom{idClassroom=195, classroomNumber=1, classroomName='Pierwsza'}, studentMarks=[Mark{idMark=184, markValue=1, markName='ndst'}, Mark{idMark=185, markValue=2, markName='mrn'}, Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=187, markValue=4, markName='db'}, Mark{idMark=188, markValue=5, markName='bdb'}, Mark{idMark=189, markValue=6, markName='cel'}]}, Student{idStudent=192, userName='ibi', firstName='Izabela', lastName='Break', classroom=Classroom{idClassroom=196, classroomNumber=2, classroomName='Druga'}, studentMarks=[Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=186, markValue=3, markName='dst'}, Mark{idMark=186, markValue=3, markName='dst'}]}]>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.statisticservices.StatisticServiceIntegrationTest.getStudentsAboveSchoolAverageTest(StatisticServiceIntegrationTest.java:270)

