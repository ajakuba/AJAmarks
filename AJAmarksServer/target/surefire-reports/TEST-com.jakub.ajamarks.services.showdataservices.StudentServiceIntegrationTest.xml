<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="2.129" tests="12" errors="0" skipped="0" failures="4">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/home/ja/java/jdk1.8.0_77/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.77-b03"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/ja/IdeaProjects/AJAmarks"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="PL"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/ja/IdeaProjects/AJAmarks"/>
    <property name="java.runtime.version" value="1.8.0_77-b03"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/home/ja/java/jdk1.8.0_77/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/lib/idea-2016.02.02/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-31-generic"/>
    <property name="user.home" value="/home/ja"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="ja"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/home/ja/java/jdk1.8.0_77/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher integration-test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="pl"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_77"/>
    <property name="java.ext.dirs" value="/home/ja/java/jdk1.8.0_77/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/home/ja/java/jdk1.8.0_77/jre/lib/resources.jar:/home/ja/java/jdk1.8.0_77/jre/lib/rt.jar:/home/ja/java/jdk1.8.0_77/jre/lib/sunrsasign.jar:/home/ja/java/jdk1.8.0_77/jre/lib/jsse.jar:/home/ja/java/jdk1.8.0_77/jre/lib/jce.jar:/home/ja/java/jdk1.8.0_77/jre/lib/charsets.jar:/home/ja/java/jdk1.8.0_77/jre/lib/jfr.jar:/home/ja/java/jdk1.8.0_77/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="getStudentsWithoutGivenMark_NoStudentsForGicenMarkTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.173">
    <failure message="&#10;Expected: is &lt;1&gt;&#10;     but: was &lt;0&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <1>
     but: was <0>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest.getStudentsWithoutGivenMark_NoStudentsForGicenMarkTest(StudentServiceIntegrationTest.java:236)
]]></failure>
    <system-out>Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Classroom (classroomName, classroomNumber, idClassroom) values (?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: select mark0_.idMark as idMark1_1_, mark0_.markName as markName2_1_, mark0_.markValue as markValu3_1_ from Mark mark0_ where mark0_.markValue=?
Hibernate: select student0_.idStudent as idStuden1_3_, student0_.classroom_idClassroom as classroo5_3_, student0_.firstName as firstNam2_3_, student0_.lastName as lastName3_3_, student0_.userName as userName4_3_ from Student student0_
Hibernate: select classroom0_.idClassroom as idClassr1_0_0_, classroom0_.classroomName as classroo2_0_0_, classroom0_.classroomNumber as classroo3_0_0_, studentsin1_.classroom_idClassroom as classroo5_3_1_, studentsin1_.idStudent as idStuden1_3_1_, studentsin1_.idStudent as idStuden1_3_2_, studentsin1_.classroom_idClassroom as classroo5_3_2_, studentsin1_.firstName as firstNam2_3_2_, studentsin1_.lastName as lastName3_3_2_, studentsin1_.userName as userName4_3_2_, studentmar2_.studentsWithMark_idStudent as students2_2_3_, mark3_.idMark as studentM1_2_3_, mark3_.idMark as idMark1_1_4_, mark3_.markName as markName2_1_4_, mark3_.markValue as markValu3_1_4_ from Classroom classroom0_ left outer join Student studentsin1_ on classroom0_.idClassroom=studentsin1_.classroom_idClassroom left outer join Mark_Student studentmar2_ on studentsin1_.idStudent=studentmar2_.studentsWithMark_idStudent left outer join Mark mark3_ on studentmar2_.studentMarks_idMark=mark3_.idMark where classroom0_.idClassroom=?
Hibernate: select studentswi0_.studentMarks_idMark as studentM1_2_0_, studentswi0_.studentsWithMark_idStudent as students2_2_0_, student1_.idStudent as idStuden1_3_1_, student1_.classroom_idClassroom as classroo5_3_1_, student1_.firstName as firstNam2_3_1_, student1_.lastName as lastName3_3_1_, student1_.userName as userName4_3_1_, classroom2_.idClassroom as idClassr1_0_2_, classroom2_.classroomName as classroo2_0_2_, classroom2_.classroomNumber as classroo3_0_2_ from Mark_Student studentswi0_ inner join Student student1_ on studentswi0_.studentsWithMark_idStudent=student1_.idStudent left outer join Classroom classroom2_ on student1_.classroom_idClassroom=classroom2_.idClassroom where studentswi0_.studentMarks_idMark=?
</system-out>
  </testcase>
  <testcase name="getClassroomStudentsByClassroomNameDescLastNameTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.16"/>
  <testcase name="getStudentByIdTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.225"/>
  <testcase name="saveStudentTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.242">
    <failure message="&#10;Expected: is &lt;3&gt;&#10;     but: was &lt;2&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <3>
     but: was <2>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest.saveStudentTest(StudentServiceIntegrationTest.java:101)
]]></failure>
    <system-out>Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Classroom (classroomName, classroomNumber, idClassroom) values (?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: select student0_.idStudent as idStuden1_3_, student0_.classroom_idClassroom as classroo5_3_, student0_.firstName as firstNam2_3_, student0_.lastName as lastName3_3_, student0_.userName as userName4_3_ from Student student0_ order by student0_.lastName desc
Hibernate: select classroom0_.idClassroom as idClassr1_0_0_, classroom0_.classroomName as classroo2_0_0_, classroom0_.classroomNumber as classroo3_0_0_, studentsin1_.classroom_idClassroom as classroo5_3_1_, studentsin1_.idStudent as idStuden1_3_1_, studentsin1_.idStudent as idStuden1_3_2_, studentsin1_.classroom_idClassroom as classroo5_3_2_, studentsin1_.firstName as firstNam2_3_2_, studentsin1_.lastName as lastName3_3_2_, studentsin1_.userName as userName4_3_2_, studentmar2_.studentsWithMark_idStudent as students2_2_3_, mark3_.idMark as studentM1_2_3_, mark3_.idMark as idMark1_1_4_, mark3_.markName as markName2_1_4_, mark3_.markValue as markValu3_1_4_ from Classroom classroom0_ left outer join Student studentsin1_ on classroom0_.idClassroom=studentsin1_.classroom_idClassroom left outer join Mark_Student studentmar2_ on studentsin1_.idStudent=studentmar2_.studentsWithMark_idStudent left outer join Mark mark3_ on studentmar2_.studentMarks_idMark=mark3_.idMark where classroom0_.idClassroom=?
Hibernate: select studentswi0_.studentMarks_idMark as studentM1_2_0_, studentswi0_.studentsWithMark_idStudent as students2_2_0_, student1_.idStudent as idStuden1_3_1_, student1_.classroom_idClassroom as classroo5_3_1_, student1_.firstName as firstNam2_3_1_, student1_.lastName as lastName3_3_1_, student1_.userName as userName4_3_1_, classroom2_.idClassroom as idClassr1_0_2_, classroom2_.classroomName as classroo2_0_2_, classroom2_.classroomNumber as classroo3_0_2_ from Mark_Student studentswi0_ inner join Student student1_ on studentswi0_.studentsWithMark_idStudent=student1_.idStudent left outer join Classroom classroom2_ on student1_.classroom_idClassroom=classroom2_.idClassroom where studentswi0_.studentMarks_idMark=?
</system-out>
  </testcase>
  <testcase name="getStudentsWithGivenMark_NoStudensForGivenMarkTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.15"/>
  <testcase name="getAllTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.262">
    <failure message="&#10;Expected: is &lt;3&gt;&#10;     but: was &lt;2&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <3>
     but: was <2>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest.getAllTest(StudentServiceIntegrationTest.java:139)
]]></failure>
    <system-out>Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Classroom (classroomName, classroomNumber, idClassroom) values (?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: select student0_.idStudent as idStuden1_3_, student0_.classroom_idClassroom as classroo5_3_, student0_.firstName as firstNam2_3_, student0_.lastName as lastName3_3_, student0_.userName as userName4_3_ from Student student0_ order by student0_.lastName desc
Hibernate: select classroom0_.idClassroom as idClassr1_0_0_, classroom0_.classroomName as classroo2_0_0_, classroom0_.classroomNumber as classroo3_0_0_, studentsin1_.classroom_idClassroom as classroo5_3_1_, studentsin1_.idStudent as idStuden1_3_1_, studentsin1_.idStudent as idStuden1_3_2_, studentsin1_.classroom_idClassroom as classroo5_3_2_, studentsin1_.firstName as firstNam2_3_2_, studentsin1_.lastName as lastName3_3_2_, studentsin1_.userName as userName4_3_2_, studentmar2_.studentsWithMark_idStudent as students2_2_3_, mark3_.idMark as studentM1_2_3_, mark3_.idMark as idMark1_1_4_, mark3_.markName as markName2_1_4_, mark3_.markValue as markValu3_1_4_ from Classroom classroom0_ left outer join Student studentsin1_ on classroom0_.idClassroom=studentsin1_.classroom_idClassroom left outer join Mark_Student studentmar2_ on studentsin1_.idStudent=studentmar2_.studentsWithMark_idStudent left outer join Mark mark3_ on studentmar2_.studentMarks_idMark=mark3_.idMark where classroom0_.idClassroom=?
Hibernate: select studentswi0_.studentMarks_idMark as studentM1_2_0_, studentswi0_.studentsWithMark_idStudent as students2_2_0_, student1_.idStudent as idStuden1_3_1_, student1_.classroom_idClassroom as classroo5_3_1_, student1_.firstName as firstNam2_3_1_, student1_.lastName as lastName3_3_1_, student1_.userName as userName4_3_1_, classroom2_.idClassroom as idClassr1_0_2_, classroom2_.classroomName as classroo2_0_2_, classroom2_.classroomNumber as classroo3_0_2_ from Mark_Student studentswi0_ inner join Student student1_ on studentswi0_.studentsWithMark_idStudent=student1_.idStudent left outer join Classroom classroom2_ on student1_.classroom_idClassroom=classroom2_.idClassroom where studentswi0_.studentMarks_idMark=?
</system-out>
  </testcase>
  <testcase name="getClassroomStudentsByClassroomNumberDescLastNameTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.189"/>
  <testcase name="getStudentsWithoutGivenMarkTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.167"/>
  <testcase name="getStudentByUserNameTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.135"/>
  <testcase name="updateStudentTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.133"/>
  <testcase name="getStudentsWithGivenMarkTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.168"/>
  <testcase name="deleteTest" classname="com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest" time="0.125">
    <failure message="&#10;Expected: is &lt;1&gt;&#10;     but: was &lt;0&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <1>
     but: was <0>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.jakub.ajamarks.services.showdataservices.StudentServiceIntegrationTest.deleteTest(StudentServiceIntegrationTest.java:129)
]]></failure>
    <system-out>Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Mark (markName, markValue, idMark) values (?, ?, ?)
Hibernate: insert into Classroom (classroomName, classroomNumber, idClassroom) values (?, ?, ?)
Hibernate: insert into Student (classroom_idClassroom, firstName, lastName, userName, idStudent) values (?, ?, ?, ?, ?)
Hibernate: delete from Mark where idMark=?
Hibernate: delete from Student where idStudent=?
Hibernate: select student0_.idStudent as idStuden1_3_, student0_.classroom_idClassroom as classroo5_3_, student0_.firstName as firstNam2_3_, student0_.lastName as lastName3_3_, student0_.userName as userName4_3_ from Student student0_ order by student0_.lastName desc
Hibernate: select classroom0_.idClassroom as idClassr1_0_0_, classroom0_.classroomName as classroo2_0_0_, classroom0_.classroomNumber as classroo3_0_0_, studentsin1_.classroom_idClassroom as classroo5_3_1_, studentsin1_.idStudent as idStuden1_3_1_, studentsin1_.idStudent as idStuden1_3_2_, studentsin1_.classroom_idClassroom as classroo5_3_2_, studentsin1_.firstName as firstNam2_3_2_, studentsin1_.lastName as lastName3_3_2_, studentsin1_.userName as userName4_3_2_, studentmar2_.studentsWithMark_idStudent as students2_2_3_, mark3_.idMark as studentM1_2_3_, mark3_.idMark as idMark1_1_4_, mark3_.markName as markName2_1_4_, mark3_.markValue as markValu3_1_4_ from Classroom classroom0_ left outer join Student studentsin1_ on classroom0_.idClassroom=studentsin1_.classroom_idClassroom left outer join Mark_Student studentmar2_ on studentsin1_.idStudent=studentmar2_.studentsWithMark_idStudent left outer join Mark mark3_ on studentmar2_.studentMarks_idMark=mark3_.idMark where classroom0_.idClassroom=?
Hibernate: select studentswi0_.studentMarks_idMark as studentM1_2_0_, studentswi0_.studentsWithMark_idStudent as students2_2_0_, student1_.idStudent as idStuden1_3_1_, student1_.classroom_idClassroom as classroo5_3_1_, student1_.firstName as firstNam2_3_1_, student1_.lastName as lastName3_3_1_, student1_.userName as userName4_3_1_, classroom2_.idClassroom as idClassr1_0_2_, classroom2_.classroomName as classroo2_0_2_, classroom2_.classroomNumber as classroo3_0_2_ from Mark_Student studentswi0_ inner join Student student1_ on studentswi0_.studentsWithMark_idStudent=student1_.idStudent left outer join Classroom classroom2_ on student1_.classroom_idClassroom=classroom2_.idClassroom where studentswi0_.studentMarks_idMark=?
</system-out>
  </testcase>
</testsuite>